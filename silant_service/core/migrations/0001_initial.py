# Generated by Django 4.2.17 on 2024-12-30 11:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=255, unique=True, verbose_name='Зав. № машины')),
                ('engine_serial', models.CharField(max_length=255, verbose_name='Зав. № двигателя')),
                ('transmission_serial', models.CharField(max_length=255, verbose_name='Зав. № трансмиссии')),
                ('drive_axle_serial', models.CharField(max_length=255, verbose_name='Зав. № ведущего моста')),
                ('steer_axle_serial', models.CharField(max_length=255, verbose_name='Зав. № управляемого моста')),
                ('shipment_date', models.DateField(verbose_name='Дата отгрузки с завода')),
                ('consignee', models.CharField(max_length=255, verbose_name='Грузополучатель (конечный потребитель)')),
                ('delivery_address', models.TextField(verbose_name='Адрес поставки (эксплуатации)')),
                ('configuration', models.TextField(blank=True, verbose_name='Комплектация (доп. опции)')),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_name', models.CharField(max_length=100, verbose_name='Название сущности')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
        ),
        migrations.CreateModel(
            name='UserReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.group', verbose_name='Группа пользователя')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_reference', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_date', models.DateField(verbose_name='Дата проведения ТО')),
                ('operating_hours', models.PositiveIntegerField(verbose_name='Наработка, м/час')),
                ('order_number', models.CharField(max_length=255, verbose_name='№ заказ-наряда')),
                ('order_date', models.DateField(verbose_name='Дата заказ-наряда')),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenances', to='core.machine')),
                ('maintenance_type', models.ForeignKey(limit_choices_to={'entity_name': 'Вид ТО'}, on_delete=django.db.models.deletion.PROTECT, related_name='maintenances_type', to='core.reference', verbose_name='Вид ТО')),
                ('organization', models.ForeignKey(limit_choices_to={'entity_name': 'Организация'}, on_delete=django.db.models.deletion.PROTECT, related_name='maintenances_organization', to='core.reference', verbose_name='Организация, проводившая ТО')),
            ],
        ),
        migrations.AddField(
            model_name='machine',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='client_machines', to='core.userreference', verbose_name='Покупатель'),
        ),
        migrations.AddField(
            model_name='machine',
            name='drive_axle_model',
            field=models.ForeignKey(limit_choices_to={'entity_name': 'Модель ведущего моста'}, on_delete=django.db.models.deletion.PROTECT, related_name='machines_drive_axle_model', to='core.reference', verbose_name='Модель ведущего моста'),
        ),
        migrations.AddField(
            model_name='machine',
            name='engine_model',
            field=models.ForeignKey(limit_choices_to={'entity_name': 'Модель двигателя'}, on_delete=django.db.models.deletion.PROTECT, related_name='machines_engine_model', to='core.reference', verbose_name='Модель двигателя'),
        ),
        migrations.AddField(
            model_name='machine',
            name='model',
            field=models.ForeignKey(limit_choices_to={'entity_name': 'Модель техники'}, on_delete=django.db.models.deletion.PROTECT, related_name='machines_model', to='core.reference', verbose_name='Модель техники'),
        ),
        migrations.AddField(
            model_name='machine',
            name='service_company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_company_machines', to='core.userreference', verbose_name='Сервисная компания'),
        ),
        migrations.AddField(
            model_name='machine',
            name='steer_axle_model',
            field=models.ForeignKey(limit_choices_to={'entity_name': 'Модель управляемого моста'}, on_delete=django.db.models.deletion.PROTECT, related_name='machines_steer_axle_model', to='core.reference', verbose_name='Модель управляемого моста'),
        ),
        migrations.AddField(
            model_name='machine',
            name='transmission_model',
            field=models.ForeignKey(limit_choices_to={'entity_name': 'Модель трансмиссии'}, on_delete=django.db.models.deletion.PROTECT, related_name='machines_transmission_model', to='core.reference', verbose_name='Модель трансмиссии'),
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('failure_date', models.DateField(verbose_name='Дата отказа')),
                ('operating_hours', models.PositiveIntegerField(verbose_name='Наработка, м/час')),
                ('failure_description', models.TextField(verbose_name='Описание отказа')),
                ('spare_parts', models.TextField(blank=True, verbose_name='Используемые запасные части')),
                ('recovery_date', models.DateField(verbose_name='Дата восстановления')),
                ('downtime', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='Время простоя техники (ч)')),
                ('failed_node', models.ForeignKey(limit_choices_to={'entity_name': 'Узел отказа'}, on_delete=django.db.models.deletion.PROTECT, related_name='failed_nodes', to='core.reference', verbose_name='Узел отказа')),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claims', to='core.machine')),
                ('recovery_method', models.ForeignKey(limit_choices_to={'entity_name': 'Способ восстановления'}, on_delete=django.db.models.deletion.PROTECT, related_name='recovery_methods', to='core.reference', verbose_name='Способ восстановления')),
                ('service_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Сервисная компания')),
            ],
        ),
    ]
